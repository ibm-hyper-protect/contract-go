name: contract-go CI

on:
  push:
    branches:
      - main

  pull_request:

  workflow_dispatch:
    inputs:
      dryRun:
        description: 'Dry-Run'
        default: 'true'
        required: false

env:
  # Currently no way to detect automatically
  DEFAULT_BRANCH: main
  GO_VERSION: 1.22.4 # renovate: datasource=golang-version depName=golang
  NODE_VERSION: 20
  DRY_RUN: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.22.x']
    steps:
      # full checkout for semantic-release
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Tests
        run: |
          go mod tidy
          go test -v ./...

  release:
    needs: [build]
    if: github.repository == 'ibm-hyper-protect/contract-go' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      # full checkout for semantic-release
      - name: Full checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      # Install cyclonedx for SBOM
      - name: Install cyclonedx-gomod
        run: |
          go install github.com/CycloneDX/cyclonedx-gomod/cmd/cyclonedx-gomod@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Generate SBOM
        run: |
          cyclonedx-gomod mod -licenses -json -output contract-go.sbom.json

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: contract-go.sbom
          path: contract-go.sbom.json

      # The dry-run evaluation is only made for non PR events. Manual trigger w/dryRun true, main branch and any tagged branches will set DRY run to false
      - name: Check dry run
        run: |
          if [[ "${{github.event_name}}" == "workflow_dispatch" && "${{ github.event.inputs.dryRun }}" != "true"  ]]; then
              echo "DRY_RUN=false" >> $GITHUB_ENV
          elif [[ "${{github.ref}}" == "refs/heads/${{env.DEFAULT_BRANCH}}" ]]; then
            echo "DRY_RUN=false" >> $GITHUB_ENV
          elif [[ "${{github.ref}}" =~ ^refs/heads/v[0-9]+(\.[0-9]+)?$ ]]; then
            echo "DRY_RUN=false" >> $GITHUB_ENV
          fi

      - name: Semantic Release
        run: |
          npx -p conventional-changelog-conventionalcommits -p semantic-release semantic-release --dry-run ${{env.DRY_RUN}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-sbom:
    needs: release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download SBOM artifact
        uses: actions/download-artifact@v4
        with:
          name: contract-go.sbom

      - name: Upload SBOM to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: contract-go.sbom.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
